# This is a basic workflow to help you get started with Actions

name: Build release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup-MSBuild
        uses: microsoft/setup-msbuild@v1.0.1
      
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
        
      - name: Restore NuGet packages
        run: nuget restore data-pumper.sln
      
      - name: Build the Solution
        run: msbuild data-pumper.sln  /p:Configuration=Release
        
      - name: ZIP Build
        # You may pin to the exact commit or the version.
        # uses: papeloto/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: papeloto/action-zip@v1
        with:
          # Files or directories to zip
          files: bin\DataPumper.Console
          # Name of output zip file
          dest: release.zip              
      
      - name: Create a Release
        id : create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: v1.0.4
          release_name: Release v1.0.4
      
      - name: Upload a Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env :
           GITHUB_TOKEN : $ {{secrets.GITHUB_TOKEN}} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
      
      

      
